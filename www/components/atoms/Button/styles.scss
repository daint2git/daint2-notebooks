@import 'components/utils/colors';
@import 'components/utils/variables';
@import 'components/utils/mixins';

@mixin btnColor($initialColor, $hoverColor, $textColor: $white) {
  border-color: $initialColor;
  background-color: $initialColor;
  color: $textColor;

  &:hover {
    border-color: $hoverColor;
    background-color: $hoverColor;
  }
}

@mixin btnSize($size, $padding, $lineHeight) {
  font-size: $size;
  padding: $padding;
  line-height: $lineHeight;
}

.root {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: $transition_duration_1;
  border: 1px solid transparent;
  cursor: pointer;
  user-select: none;
  position: relative;
  overflow: hidden;

  /* colors */
  &.primary {
    @include btnColor($primary, $primary_hover);

    &[data-variant='outline'] {
      border-color: $primary;
      background-color: $white;
      color: $primary;

      &:hover {
        background-color: $primary;
        color: $white;
      }
    }

    &[data-variant='text'] {
      border-color: transparent;
      background-color: transparent;
      color: $primary;

      &:hover {
        background-color: $primary;
        color: $white;
      }
    }
  }

  &.info {
    @include btnColor($info, $info_hover);

    &[data-variant='outline'] {
      border-color: $info;
      background-color: $white;
      color: $info;

      &:hover {
        background-color: $info;
        color: $white;
      }
    }

    &[data-variant='text'] {
      border-color: transparent;
      background-color: transparent;
      color: $info;

      &:hover {
        background-color: $info;
        color: $white;
      }
    }
  }

  &.danger {
    @include btnColor($danger, $danger_hover);

    &[data-variant='outline'] {
      border-color: $danger;
      background-color: $white;
      color: $danger;

      &:hover {
        background-color: $danger;
        color: $white;
      }
    }

    &[data-variant='text'] {
      border-color: transparent;
      background-color: transparent;
      color: $danger;

      &:hover {
        background-color: $danger;
        color: $white;
      }
    }
  }

  &.success {
    @include btnColor($success, $success_hover);

    &[data-variant='outline'] {
      border-color: $success;
      background-color: $white;
      color: $success;

      &:hover {
        background-color: $success;
        color: $white;
      }
    }

    &[data-variant='text'] {
      border-color: transparent;
      background-color: transparent;
      color: $success;

      &:hover {
        background-color: $success;
        color: $white;
      }
    }
  }

  &.warning {
    @include btnColor($warning, $warning_hover, $black);

    &[data-variant='outline'] {
      border-color: $warning;
      background-color: $white;
      color: $warning;

      &:hover {
        background-color: $warning;
        color: $black;
      }
    }

    &[data-variant='text'] {
      border-color: transparent;
      background-color: transparent;
      color: $warning;

      &:hover {
        background-color: $warning;
        color: $black;
      }
    }
  }

  &.inverse {
    @include btnColor($inverse, $inverse_hover);

    &[data-variant='outline'] {
      border-color: $inverse;
      background-color: $white;
      color: $inverse;

      &:hover {
        background-color: $inverse;
        color: $white;
      }
    }

    &[data-variant='text'] {
      border-color: transparent;
      background-color: transparent;
      color: $inverse;

      &:hover {
        background-color: $inverse;
        color: $white;
      }
    }
  }

  &.light {
    @include btnColor($white, $col_alpha_08, $black);

    &[data-variant='outline'] {
      border-color: $white;
      background-color: transparent;
      color: $white;

      &:hover {
        background-color: $col_alpha_08;
      }
    }
  }

  &.dark {
    @include btnColor($black, $col_alpha_5);

    &[data-variant='outline'] {
      border-color: $black;
      background-color: transparent;
      color: $black;

      &:hover {
        background-color: $col_alpha_08;
      }
    }
  }

  &.transparent {
    background-color: transparent;
    color: $white;

    &:hover {
      background-color: $col_alpha_08;
    }
  }

  /* sizes */
  &.small {
    @include btnSize($fs_small, 0.25rem 0.5rem, 1.5);
  }

  &.medium {
    @include btnSize($fs_medium, 0.5rem 0.75rem, 1.5);
  }

  &.large {
    @include btnSize($fs_large, 0.75rem 1rem, 1.5);
  }

  &.x-large {
    @include btnSize($fs_x_large, 1rem 1.25rem, 1.5);
  }

  &[disabled] {
    cursor: default;
    pointer-events: none;
    border-color: $disabled;
    background-color: $disabled;
  }

  &[data-full-width='true'] {
    width: 100%;
  }

  .content {
    width: 100%;
    @include centering;
  }

  .animation {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: translate(-0%);
  }

  &:focus:not(:active) {
    .animation {
      animation: ripple 0.5s ease-out;
    }
  }
}

@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(2);
  }
}
